//-----------------------------------------------------------------------------
//	C O N T A I N E R
//	
//	Container is a basic box-based layout element which is required to use
//	when using the grid system.
//

.container {
	margin: 0 auto;
	padding: 0 ($grid-gutter-width / 2);
	width: 100%;
	
	@each $breakpoint, $width in $breakpoints {
		@include media($breakpoint) {
			max-width: $width;
			width: $width;
		}
	}

	&.container--block {
		margin: 0 ($grid-gutter-width);
		width: auto;
		max-width: none;
	}
}

//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
//	R O W
//

.row {
	@include flexbox();
	@include flex-wrap(wrap);
	margin: 0 ($grid-gutter-width / -2);

	&.row--gutterless {
		padding: 0;

		.column,
		[class*=column-] {
			padding: 0;
		}
	}
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//	C O L U M N S
//	

.column {
	@include flex-grow(1);
	@include flex-basis(0);
	padding: 0 ($grid-gutter-width / 2);
	
	@each $breakpoint, $breakpoint-width in $breakpoints {

		/*
		//	Generates basic `.col-#{bp}` classes.
		*/
		&.column-#{$breakpoint} {
			@include flex-grow(1);
			@include flex-basis(0);
			max-width: 100%;
		}

		&.column-#{$breakpoint}-auto {
			@include flex(0 0 auto);
			max-width: none;
		}
		
		@for $grid-column from 1 through $grid-columns {
			@include media($breakpoint) {
				$width: $grid-column / $grid-columns;
				
				&.column-#{$breakpoint}-#{$grid-column} {
					@include flex(0 0 percentage($width));
					max-width: percentage($width);
				}

				&.column-#{$breakpoint}-auto {
					@include flex(0 0 auto);
					max-width: none;
				}
			}
		}
	}
}

//-----------------------------------------------------------------------------



